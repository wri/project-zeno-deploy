apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-api
  labels:
    app: zeno
    component: api
spec:
  replicas: {{ .Values.zeno.api.replicas | default 1 }}
  selector:
    matchLabels:
      app: zeno
      component: api
  template:
    metadata:
      labels:
        app: zeno
        component: api
      annotations:
        config/hash: {{ .Values.zeno.env_config | toYaml | sha256sum }}
        secret/hash: {{ .Values.zeno.env_secrets | toYaml | sha256sum }}
    spec:
      initContainers:
        - name: s3-data-sync
          image: amazon/aws-cli
          command: ['aws', 's3', 'sync', 's3://zeno-static-data', '/app/data']
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-zeno-secrets
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-zeno-secrets
                  key: AWS_SECRET_ACCESS_KEY
            - name: AWS_DEFAULT_REGION
              value: "{{ .Values.zeno.env_config.AWS_DEFAULT_REGION | default "us-east-1" }}"
          volumeMounts:
            - name: data-volume
              mountPath: /app/data
      containers:
        - name: zeno-api
          image: "{{ .Values.zeno.api.image.repository }}:{{ .Values.zeno.api.image.tag }}"
          imagePullPolicy: "IfNotPresent"
          #command: ["uv", "run", "uvicorn", "src.api.app:app", "--host", "0.0.0.0", "--port", "8000"]
          command: ["/bin/sh"]
          args: 
            - "-c"
            - |
              uv run uvicorn src.api.app:app --host 0.0.0.0 --port 8000 
          resources:
            {{- toYaml .Values.zeno.api.resources | nindent 12 }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-zeno-config
            - secretRef:
                name: {{ .Release.Name }}-zeno-secrets
          volumeMounts:
            - name: data-volume
              mountPath: /app/data
            - name: gee-service-account
              mountPath: /keys
              readOnly: true
      volumes:
        - name: data-volume
          emptyDir: {}
        - name: gee-service-account
          secret:
            secretName: {{ .Release.Name }}-zeno-secrets
            items:
              - key: GEE_SERVICE_ACCOUNT_JSON
                path: zeno-gee-service-account.json

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-streamlit
  labels:
    app: zeno
    component: streamlit
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zeno
      component: streamlit
  template:
    metadata:
      labels:
        app: zeno
        component: streamlit
      annotations:
        config/hash: {{ .Values.zeno.streamlit.env_config | toYaml | sha256sum }}
    spec:
      containers:
        - name: zeno-streamlit
          image: "{{ .Values.zeno.api.image.repository }}:{{ .Values.zeno.api.image.tag }}"
          imagePullPolicy: "IfNotPresent"
          command: ["uv", "run", "streamlit", "run", "src/frontend/app.py", "--server.port=8501", "--server.address=0.0.0.0"]
          resources:
            {{- toYaml .Values.zeno.streamlit.resources | nindent 12 }}
          ports:
            - name: http
              containerPort: 8501
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-streamlit-config

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-shell
  labels:
    app: zeno
    component: shell
spec:
  replicas: {{ .Values.zeno.shell.replicas | default 0 }}
  selector:
    matchLabels:
      app: zeno
      component: shell
  template:
    metadata:
      labels:
        app: zeno
        component: shell
      annotations:
        config/hash: {{ .Values.zeno.env_config | toYaml | sha256sum }}
        secret/hash: {{ .Values.zeno.env_secrets | toYaml | sha256sum }}
    spec:
      initContainers:
        - name: s3-data-sync
          image: amazon/aws-cli
          command: ['aws', 's3', 'sync', 's3://zeno-static-data', '/app/data']
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-zeno-secrets
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-zeno-secrets
                  key: AWS_SECRET_ACCESS_KEY
            - name: AWS_DEFAULT_REGION
              value: "{{ .Values.zeno.env_config.AWS_DEFAULT_REGION | default "us-east-1" }}"
          volumeMounts:
            - name: data-volume
              mountPath: /app/data
      containers:
        - name: zeno-shell
          image: "{{ .Values.zeno.api.image.repository }}:{{ .Values.zeno.api.image.tag }}"
          imagePullPolicy: "IfNotPresent"
          command: ["/bin/sh"]
          args: 
            - "-c"
            - |
              echo "Zeno shell container started. Ready for commands."
              sleep infinity
          resources:
            {{- toYaml .Values.zeno.shell.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-zeno-config
            - secretRef:
                name: {{ .Release.Name }}-zeno-secrets
          volumeMounts:
            - name: data-volume
              mountPath: /app/data
            - name: gee-service-account
              mountPath: /keys
              readOnly: true
      volumes:
        - name: data-volume
          emptyDir: {}
        - name: gee-service-account
          secret:
            secretName: {{ .Release.Name }}-zeno-secrets
            items:
              - key: GEE_SERVICE_ACCOUNT_JSON
                path: zeno-gee-service-account.json
